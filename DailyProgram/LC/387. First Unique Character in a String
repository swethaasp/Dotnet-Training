Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"

Output: 0

Explanation:

The character 'l' at index 0 is the first character that does not occur at any other index.

Example 2:

Input: s = "loveleetcode"

Output: 2

Example 3:

Input: s = "aabb"

Output: -1

 

Constraints:

1 <= s.length <= 105
s consists of only lowercase English letters.


public class Solution {
    public int FirstUniqChar(string s) {

       
        for(int i=0;i<s.Length;i++){
         if(s.IndexOf(s[i])==s.LastIndexOf(s[i])){
             return i;
         }
        }
        return -1;
    }
}



//alt

public class Solution {
    public int FirstUniqChar(string s) {
        
        int[] freq =new int[26]; //a to z
        foreach(char c in s){
            freq[c-'a']++;  //11(l)-1   4(e)-2 19(t)-1  2(c)-1 14(o)-1  3(d)-1 4(e)-1
        }
        
        for(int i=0;i<s.Length;i++){
            if(freq[s[i]-'a']==1){
                return i;
            }
        }
        return -1;
    }
}
